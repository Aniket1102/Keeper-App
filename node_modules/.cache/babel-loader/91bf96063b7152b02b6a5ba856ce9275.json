{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\ANIKE\\\\Desktop\\\\Udemy\\\\Web Developing\\\\keeper-app-part-1-starting\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _slicedToArray = require(\"C:\\\\Users\\\\ANIKE\\\\Desktop\\\\Udemy\\\\Web Developing\\\\keeper-app-part-1-starting\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"C:\\\\Users\\\\ANIKE\\\\Desktop\\\\Udemy\\\\Web Developing\\\\keeper-app-part-1-starting\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createForOfIteratorHelper\");\n\nvar _toConsumableArray = require(\"C:\\\\Users\\\\ANIKE\\\\Desktop\\\\Udemy\\\\Web Developing\\\\keeper-app-part-1-starting\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\ANIKE\\\\Desktop\\\\Udemy\\\\Web Developing\\\\keeper-app-part-1-starting\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\ANIKE\\\\Desktop\\\\Udemy\\\\Web Developing\\\\keeper-app-part-1-starting\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar FiggyPudding = /*#__PURE__*/function () {\n  function FiggyPudding(specs, opts, providers) {\n    var _this = this;\n\n    _classCallCheck(this, FiggyPudding);\n\n    this.__specs = specs || {};\n    Object.keys(this.__specs).forEach(function (alias) {\n      if (typeof _this.__specs[alias] === 'string') {\n        var key = _this.__specs[alias];\n        var realSpec = _this.__specs[key];\n\n        if (realSpec) {\n          var aliasArr = realSpec.aliases || [];\n          aliasArr.push(alias, key);\n          realSpec.aliases = _toConsumableArray(new Set(aliasArr));\n          _this.__specs[alias] = realSpec;\n        } else {\n          throw new Error(\"Alias refers to invalid key: \".concat(key, \" -> \").concat(alias));\n        }\n      }\n    });\n    this.__opts = opts || {};\n    this.__providers = reverse(providers.filter(function (x) {\n      return x != null && typeof x === 'object';\n    }));\n    this.__isFiggyPudding = true;\n  }\n\n  _createClass(FiggyPudding, [{\n    key: \"get\",\n    value: function get(key) {\n      return pudGet(this, key, true);\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return 'FiggyPudding';\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;\n\n      var _iterator = _createForOfIteratorHelper(this.entries()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              key = _step$value[0],\n              value = _step$value[1];\n\n          fn.call(thisArg, value, key, this);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var obj = {};\n      this.forEach(function (val, key) {\n        obj[key] = val;\n      });\n      return obj;\n    }\n  }, {\n    key: \"entries\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function entries(_matcher) {\n      var _i, _Object$keys, key, matcher, seen, _iterator2, _step2, p, iter, _iterator3, _step3, _step3$value, _key, val;\n\n      return _regeneratorRuntime.wrap(function entries$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _i = 0, _Object$keys = Object.keys(this.__specs);\n\n            case 1:\n              if (!(_i < _Object$keys.length)) {\n                _context.next = 8;\n                break;\n              }\n\n              key = _Object$keys[_i];\n              _context.next = 5;\n              return [key, this.get(key)];\n\n            case 5:\n              _i++;\n              _context.next = 1;\n              break;\n\n            case 8:\n              matcher = _matcher || this.__opts.other;\n\n              if (!matcher) {\n                _context.next = 46;\n                break;\n              }\n\n              seen = new Set();\n              _iterator2 = _createForOfIteratorHelper(this.__providers);\n              _context.prev = 12;\n\n              _iterator2.s();\n\n            case 14:\n              if ((_step2 = _iterator2.n()).done) {\n                _context.next = 38;\n                break;\n              }\n\n              p = _step2.value;\n              iter = p.entries ? p.entries(matcher) : _entries(p);\n              _iterator3 = _createForOfIteratorHelper(iter);\n              _context.prev = 18;\n\n              _iterator3.s();\n\n            case 20:\n              if ((_step3 = _iterator3.n()).done) {\n                _context.next = 28;\n                break;\n              }\n\n              _step3$value = _slicedToArray(_step3.value, 2), _key = _step3$value[0], val = _step3$value[1];\n\n              if (!(matcher(_key) && !seen.has(_key))) {\n                _context.next = 26;\n                break;\n              }\n\n              seen.add(_key);\n              _context.next = 26;\n              return [_key, val];\n\n            case 26:\n              _context.next = 20;\n              break;\n\n            case 28:\n              _context.next = 33;\n              break;\n\n            case 30:\n              _context.prev = 30;\n              _context.t0 = _context[\"catch\"](18);\n\n              _iterator3.e(_context.t0);\n\n            case 33:\n              _context.prev = 33;\n\n              _iterator3.f();\n\n              return _context.finish(33);\n\n            case 36:\n              _context.next = 14;\n              break;\n\n            case 38:\n              _context.next = 43;\n              break;\n\n            case 40:\n              _context.prev = 40;\n              _context.t1 = _context[\"catch\"](12);\n\n              _iterator2.e(_context.t1);\n\n            case 43:\n              _context.prev = 43;\n\n              _iterator2.f();\n\n              return _context.finish(43);\n\n            case 46:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, entries, this, [[12, 40, 43, 46], [18, 30, 33, 36]]);\n    })\n  }, {\n    key: Symbol.iterator,\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function value() {\n      var _iterator4, _step4, _step4$value, key, value;\n\n      return _regeneratorRuntime.wrap(function value$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _iterator4 = _createForOfIteratorHelper(this.entries());\n              _context2.prev = 1;\n\n              _iterator4.s();\n\n            case 3:\n              if ((_step4 = _iterator4.n()).done) {\n                _context2.next = 9;\n                break;\n              }\n\n              _step4$value = _slicedToArray(_step4.value, 2), key = _step4$value[0], value = _step4$value[1];\n              _context2.next = 7;\n              return [key, value];\n\n            case 7:\n              _context2.next = 3;\n              break;\n\n            case 9:\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n\n              _iterator4.e(_context2.t0);\n\n            case 14:\n              _context2.prev = 14;\n\n              _iterator4.f();\n\n              return _context2.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, value, this, [[1, 11, 14, 17]]);\n    })\n  }, {\n    key: \"keys\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function keys() {\n      var _iterator5, _step5, _step5$value, key;\n\n      return _regeneratorRuntime.wrap(function keys$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _iterator5 = _createForOfIteratorHelper(this.entries());\n              _context3.prev = 1;\n\n              _iterator5.s();\n\n            case 3:\n              if ((_step5 = _iterator5.n()).done) {\n                _context3.next = 9;\n                break;\n              }\n\n              _step5$value = _slicedToArray(_step5.value, 1), key = _step5$value[0];\n              _context3.next = 7;\n              return key;\n\n            case 7:\n              _context3.next = 3;\n              break;\n\n            case 9:\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](1);\n\n              _iterator5.e(_context3.t0);\n\n            case 14:\n              _context3.prev = 14;\n\n              _iterator5.f();\n\n              return _context3.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, keys, this, [[1, 11, 14, 17]]);\n    })\n  }, {\n    key: \"values\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function values() {\n      var _iterator6, _step6, _step6$value, value;\n\n      return _regeneratorRuntime.wrap(function values$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _iterator6 = _createForOfIteratorHelper(this.entries());\n              _context4.prev = 1;\n\n              _iterator6.s();\n\n            case 3:\n              if ((_step6 = _iterator6.n()).done) {\n                _context4.next = 9;\n                break;\n              }\n\n              _step6$value = _slicedToArray(_step6.value, 2), value = _step6$value[1];\n              _context4.next = 7;\n              return value;\n\n            case 7:\n              _context4.next = 3;\n              break;\n\n            case 9:\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](1);\n\n              _iterator6.e(_context4.t0);\n\n            case 14:\n              _context4.prev = 14;\n\n              _iterator6.f();\n\n              return _context4.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, values, this, [[1, 11, 14, 17]]);\n    })\n  }, {\n    key: \"concat\",\n    value: function concat() {\n      for (var _len = arguments.length, moreConfig = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n        moreConfig[_key2] = arguments[_key2];\n      }\n\n      return new Proxy(new FiggyPudding(this.__specs, this.__opts, reverse(this.__providers).concat(moreConfig)), proxyHandler);\n    }\n  }]);\n\n  return FiggyPudding;\n}();\n\ntry {\n  var util = require('util');\n\n  FiggyPudding.prototype[util.inspect.custom] = function (depth, opts) {\n    return this[Symbol.toStringTag] + ' ' + util.inspect(this.toJSON(), opts);\n  };\n} catch (e) {}\n\nfunction BadKeyError(key) {\n  throw Object.assign(new Error(\"invalid config key requested: \".concat(key)), {\n    code: 'EBADKEY'\n  });\n}\n\nfunction pudGet(pud, key, validate) {\n  var spec = pud.__specs[key];\n\n  if (validate && !spec && (!pud.__opts.other || !pud.__opts.other(key))) {\n    BadKeyError(key);\n  } else {\n    if (!spec) {\n      spec = {};\n    }\n\n    var ret;\n\n    var _iterator7 = _createForOfIteratorHelper(pud.__providers),\n        _step7;\n\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var p = _step7.value;\n        ret = tryGet(key, p);\n\n        if (ret === undefined && spec.aliases && spec.aliases.length) {\n          var _iterator8 = _createForOfIteratorHelper(spec.aliases),\n              _step8;\n\n          try {\n            for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n              var alias = _step8.value;\n\n              if (alias === key) {\n                continue;\n              }\n\n              ret = tryGet(alias, p);\n\n              if (ret !== undefined) {\n                break;\n              }\n            }\n          } catch (err) {\n            _iterator8.e(err);\n          } finally {\n            _iterator8.f();\n          }\n        }\n\n        if (ret !== undefined) {\n          break;\n        }\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n\n    if (ret === undefined && spec.default !== undefined) {\n      if (typeof spec.default === 'function') {\n        return spec.default(pud);\n      } else {\n        return spec.default;\n      }\n    } else {\n      return ret;\n    }\n  }\n}\n\nfunction tryGet(key, p) {\n  var ret;\n\n  if (p.__isFiggyPudding) {\n    ret = pudGet(p, key, false);\n  } else if (typeof p.get === 'function') {\n    ret = p.get(key);\n  } else {\n    ret = p[key];\n  }\n\n  return ret;\n}\n\nvar proxyHandler = {\n  has: function has(obj, prop) {\n    return prop in obj.__specs && pudGet(obj, prop, false) !== undefined;\n  },\n  ownKeys: function ownKeys(obj) {\n    return Object.keys(obj.__specs);\n  },\n  get: function get(obj, prop) {\n    if (typeof prop === 'symbol' || prop.slice(0, 2) === '__' || prop in FiggyPudding.prototype) {\n      return obj[prop];\n    }\n\n    return obj.get(prop);\n  },\n  set: function set(obj, prop, value) {\n    if (typeof prop === 'symbol' || prop.slice(0, 2) === '__') {\n      obj[prop] = value;\n      return true;\n    } else {\n      throw new Error('figgyPudding options cannot be modified. Use .concat() instead.');\n    }\n  },\n  deleteProperty: function deleteProperty() {\n    throw new Error('figgyPudding options cannot be deleted. Use .concat() and shadow them instead.');\n  }\n};\nmodule.exports = figgyPudding;\n\nfunction figgyPudding(specs, opts) {\n  function factory() {\n    for (var _len2 = arguments.length, providers = new Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {\n      providers[_key3] = arguments[_key3];\n    }\n\n    return new Proxy(new FiggyPudding(specs, opts, providers), proxyHandler);\n  }\n\n  return factory;\n}\n\nfunction reverse(arr) {\n  var ret = [];\n  arr.forEach(function (x) {\n    return ret.unshift(x);\n  });\n  return ret;\n}\n\nfunction _entries(obj) {\n  return Object.keys(obj).map(function (k) {\n    return [k, obj[k]];\n  });\n}","map":null,"metadata":{},"sourceType":"script"}