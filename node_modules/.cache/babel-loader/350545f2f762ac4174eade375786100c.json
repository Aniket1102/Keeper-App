{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\ANIKE\\\\Desktop\\\\Udemy\\\\Web Developing\\\\keeper-app-part-1-starting\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\ANIKE\\\\Desktop\\\\Udemy\\\\Web Developing\\\\keeper-app-part-1-starting\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nmodule.exports = /*#__PURE__*/function () {\n  function ParsePlugin(source, target) {\n    _classCallCheck(this, ParsePlugin);\n\n    this.source = source;\n    this.target = target;\n  }\n\n  _createClass(ParsePlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"ParsePlugin\", function (request, resolveContext, callback) {\n        var parsed = resolver.parse(request.request);\n        var obj = Object.assign({}, request, parsed);\n\n        if (request.query && !parsed.query) {\n          obj.query = request.query;\n        }\n\n        if (parsed && resolveContext.log) {\n          if (parsed.module) resolveContext.log(\"Parsed request is a module\");\n          if (parsed.directory) resolveContext.log(\"Parsed request is a directory\");\n        }\n\n        resolver.doResolve(target, obj, null, resolveContext, callback);\n      });\n    }\n  }]);\n\n  return ParsePlugin;\n}();","map":null,"metadata":{},"sourceType":"script"}