{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:\\\\Users\\\\ANIKE\\\\Desktop\\\\Udemy\\\\Web Developing\\\\keeper-app-part-1-starting\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\ANIKE\\\\Desktop\\\\Udemy\\\\Web Developing\\\\keeper-app-part-1-starting\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\ANIKE\\\\Desktop\\\\Udemy\\\\Web Developing\\\\keeper-app-part-1-starting\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar LoaderDependency = require(\"./LoaderDependency\");\n\nvar NormalModule = require(\"../NormalModule\");\n/** @typedef {import(\"../Module\")} Module */\n\n/**\n * @callback LoadModuleCallback\n * @param {Error=} err error object\n * @param {string=} source source code\n * @param {object=} map source map\n * @param {Module=} module loaded module if successful\n */\n\n\nvar LoaderPlugin = /*#__PURE__*/function () {\n  function LoaderPlugin() {\n    _classCallCheck(this, LoaderPlugin);\n  }\n\n  _createClass(LoaderPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.compilation.tap(\"LoaderPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(LoaderDependency, normalModuleFactory);\n      });\n      compiler.hooks.compilation.tap(\"LoaderPlugin\", function (compilation) {\n        compilation.hooks.normalModuleLoader.tap(\"LoaderPlugin\", function (loaderContext, module) {\n          /**\n           * @param {string} request the request string to load the module from\n           * @param {LoadModuleCallback} callback callback returning the loaded module or error\n           * @returns {void}\n           */\n          loaderContext.loadModule = function (request, callback) {\n            var dep = new LoaderDependency(request);\n            dep.loc = {\n              name: request\n            };\n            var factory = compilation.dependencyFactories.get(dep.constructor);\n\n            if (factory === undefined) {\n              return callback(new Error(\"No module factory available for dependency type: \".concat(dep.constructor.name)));\n            }\n\n            compilation.semaphore.release();\n            compilation.addModuleDependencies(module, [{\n              factory: factory,\n              dependencies: [dep]\n            }], true, \"lm\", true, function (err) {\n              compilation.semaphore.acquire(function () {\n                if (err) {\n                  return callback(err);\n                }\n\n                if (!dep.module) {\n                  return callback(new Error(\"Cannot load the module\"));\n                } // TODO consider removing this in webpack 5\n\n\n                if (dep.module instanceof NormalModule && dep.module.error) {\n                  return callback(dep.module.error);\n                }\n\n                if (!dep.module._source) {\n                  throw new Error(\"The module created for a LoaderDependency must have a property _source\");\n                }\n\n                var source, map;\n                var moduleSource = dep.module._source;\n\n                if (moduleSource.sourceAndMap) {\n                  var sourceAndMap = moduleSource.sourceAndMap();\n                  map = sourceAndMap.map;\n                  source = sourceAndMap.source;\n                } else {\n                  map = moduleSource.map();\n                  source = moduleSource.source();\n                }\n\n                if (dep.module.buildInfo.fileDependencies) {\n                  var _iterator = _createForOfIteratorHelper(dep.module.buildInfo.fileDependencies),\n                      _step;\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      var d = _step.value;\n                      loaderContext.addDependency(d);\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n                }\n\n                if (dep.module.buildInfo.contextDependencies) {\n                  var _iterator2 = _createForOfIteratorHelper(dep.module.buildInfo.contextDependencies),\n                      _step2;\n\n                  try {\n                    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                      var _d = _step2.value;\n                      loaderContext.addContextDependency(_d);\n                    }\n                  } catch (err) {\n                    _iterator2.e(err);\n                  } finally {\n                    _iterator2.f();\n                  }\n                }\n\n                return callback(null, source, map, dep.module);\n              });\n            });\n          };\n        });\n      });\n    }\n  }]);\n\n  return LoaderPlugin;\n}();\n\nmodule.exports = LoaderPlugin;","map":null,"metadata":{},"sourceType":"script"}