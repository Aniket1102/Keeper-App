{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:\\\\Users\\\\ANIKE\\\\Desktop\\\\Udemy\\\\Web Developing\\\\keeper-app-part-1-starting\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\ANIKE\\\\Desktop\\\\Udemy\\\\Web Developing\\\\keeper-app-part-1-starting\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\ANIKE\\\\Desktop\\\\Udemy\\\\Web Developing\\\\keeper-app-part-1-starting\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar Generator = require(\"../Generator\");\n\nvar WebAssemblyParser = require(\"./WebAssemblyParser\");\n\nvar WebAssemblyGenerator = require(\"./WebAssemblyGenerator\");\n\nvar WebAssemblyJavascriptGenerator = require(\"./WebAssemblyJavascriptGenerator\");\n\nvar WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\nvar WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\n\nvar WebAssemblyInInitialChunkError = require(\"./WebAssemblyInInitialChunkError\");\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n\nvar WebAssemblyModulesPlugin = /*#__PURE__*/function () {\n  function WebAssemblyModulesPlugin(options) {\n    _classCallCheck(this, WebAssemblyModulesPlugin);\n\n    this.options = options;\n  }\n  /**\n   * @param {Compiler} compiler compiler\n   * @returns {void}\n   */\n\n\n  _createClass(WebAssemblyModulesPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.compilation.tap(\"WebAssemblyModulesPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(WebAssemblyImportDependency, normalModuleFactory);\n        compilation.dependencyFactories.set(WebAssemblyExportImportedDependency, normalModuleFactory);\n        normalModuleFactory.hooks.createParser.for(\"webassembly/experimental\").tap(\"WebAssemblyModulesPlugin\", function () {\n          return new WebAssemblyParser();\n        });\n        normalModuleFactory.hooks.createGenerator.for(\"webassembly/experimental\").tap(\"WebAssemblyModulesPlugin\", function () {\n          return Generator.byType({\n            javascript: new WebAssemblyJavascriptGenerator(),\n            webassembly: new WebAssemblyGenerator(_this.options)\n          });\n        });\n        compilation.chunkTemplate.hooks.renderManifest.tap(\"WebAssemblyModulesPlugin\", function (result, options) {\n          var chunk = options.chunk;\n          var outputOptions = options.outputOptions;\n          var moduleTemplates = options.moduleTemplates;\n          var dependencyTemplates = options.dependencyTemplates;\n\n          var _iterator = _createForOfIteratorHelper(chunk.modulesIterable),\n              _step;\n\n          try {\n            var _loop = function _loop() {\n              var module = _step.value;\n\n              if (module.type && module.type.startsWith(\"webassembly\")) {\n                var filenameTemplate = outputOptions.webassemblyModuleFilename;\n                result.push({\n                  render: function render() {\n                    return _this.renderWebAssembly(module, moduleTemplates.webassembly, dependencyTemplates);\n                  },\n                  filenameTemplate: filenameTemplate,\n                  pathOptions: {\n                    module: module\n                  },\n                  identifier: \"webassemblyModule\".concat(module.id),\n                  hash: module.hash\n                });\n              }\n            };\n\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              _loop();\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          return result;\n        });\n        compilation.hooks.afterChunks.tap(\"WebAssemblyModulesPlugin\", function () {\n          var initialWasmModules = new Set();\n\n          var _iterator2 = _createForOfIteratorHelper(compilation.chunks),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var chunk = _step2.value;\n\n              if (chunk.canBeInitial()) {\n                var _iterator4 = _createForOfIteratorHelper(chunk.modulesIterable),\n                    _step4;\n\n                try {\n                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                    var _module = _step4.value;\n\n                    if (_module.type.startsWith(\"webassembly\")) {\n                      initialWasmModules.add(_module);\n                    }\n                  }\n                } catch (err) {\n                  _iterator4.e(err);\n                } finally {\n                  _iterator4.f();\n                }\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          var _iterator3 = _createForOfIteratorHelper(initialWasmModules),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var _module2 = _step3.value;\n              compilation.errors.push(new WebAssemblyInInitialChunkError(_module2, compilation.requestShortener));\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"renderWebAssembly\",\n    value: function renderWebAssembly(module, moduleTemplate, dependencyTemplates) {\n      return moduleTemplate.render(module, dependencyTemplates, {});\n    }\n  }]);\n\n  return WebAssemblyModulesPlugin;\n}();\n\nmodule.exports = WebAssemblyModulesPlugin;","map":null,"metadata":{},"sourceType":"script"}